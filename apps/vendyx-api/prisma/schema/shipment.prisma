/// A shipment is the total price of the shipping method rate
model Shipment {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  /// Amount of the shipment collected from the customer
  amount          Int
  /// The price of the shipment after discounts
  total           Int     @map("discounted_amount")
  /// Method name that was used to create the shipment. We do not reference the ShippingMethod here because the method can be deleted.
  method          String
  /// Tracking code of the shipment retrieved from the carrier
  trackingCode    String? @map("tracking_code")
  /// Carrier name that was used to create the shipment
  carrier         String?
  /// Array of all shipment-level discount handles applied to the shipment
  /// Populated every time order shipment is modified.
  /// Use this field to show data of current discounts applied to the shipment
  /// Type: ActiveDiscount[]
  ///
  /// NOTE: this field is exposed in the api as `discounts`
  activeDiscounts Json    @default("[]") @map("active_discounts") @db.Json

  Order Order[]

  shop   Shop   @relation(fields: [shopId], references: [id])
  shopId String @default(dbgenerated("(current_setting('app.current_shop_id'::text))::uuid")) @map("shop_id") @db.Uuid

  @@map("shipment")
}

/// A shipping method is a method that your shop uses to calculate shipping rates
model ShippingMethod {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  /// The shipping method's name, meant to be displayed to the customer at checkout
  name        String
  /// The shipping method's description, meant to be displayed to the customer at checkout
  description String?
  /// Whether the shipping method is enabled or not, used to show/hide the method at checkout
  enabled     Boolean @default(true)
  /// Specific data for the shipment handler chosen
  /// Usually, this json stores the shipment integration keys and the handler code
  /// Type: ConfigurableProperty
  handler     Json

  zone   Zone   @relation(fields: [zoneId], references: [id])
  zoneId String @db.Uuid

  shop   Shop   @relation(fields: [shopId], references: [id])
  shopId String @default(dbgenerated("(current_setting('app.current_shop_id'::text))::uuid")) @map("shop_id") @db.Uuid

  @@map("shipping_method")
}

/// A zone is a collection of states that are used to group shipping rates
model Zone {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  /// The zone's name. This is used to identify the zone in the system
  name String

  shippingMethods ShippingMethod[]
  states          StateZone[]

  shop   Shop   @relation(fields: [shopId], references: [id])
  shopId String @default(dbgenerated("(current_setting('app.current_shop_id'::text))::uuid")) @map("shop_id") @db.Uuid

  @@map("zone")
}

model StateZone {
  zone   Zone   @relation(fields: [zoneId], references: [id])
  zoneId String @map("zone_id") @db.Uuid

  state   State  @relation(fields: [stateId], references: [id])
  stateId String @map("state_id") @db.Uuid

  @@id([zoneId, stateId])
  @@map("state_zone")
}
