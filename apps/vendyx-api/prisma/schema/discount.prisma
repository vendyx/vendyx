enum DiscountApplicationMode {
  CODE
  AUTOMATIC
}

enum DiscountValueType {
  PERCENTAGE
  FIXED_AMOUNT
}

enum DiscountType {
  ORDER
  PRODUCT
  SHIPPING
  BUY_X_GET_Y
}

enum OrderRequirementType {
  MINIMUM_AMOUNT
  MINIMUM_ITEMS
}

/// A discount is a way to apply price discounts to your customer orders via a code or automatic rules.
model Discount {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  /// Indicates if the discount is applied via a code or automatically.
  applicationMode       DiscountApplicationMode @map("application_mode")
  /// A human friendly unique identifier for the discount. could be used as a code or title.
  handle                String                  @unique
  /// Indicates if the discount is applied as a percentage or a fixed amount.
  discountValueType     DiscountValueType       @map("discount_value_type")
  /// the value that will be subtracted from the order total. (percentage or fixed amount)
  discountValue         Int                     @map("discount_value")
  /// Define the type of the discount.
  /// Order: discount will be applied to the order total.
  /// Product: discount will be applied to the product price.
  /// Shipping: discount will be applied to the shipping cost.
  /// BuyXGetY: discount will be applied to the product price.
  type                  DiscountType
  /// The maximum number of times the discount can be used by a customer.
  perCustomerLimit      Int?                    @map("per_customer_limit")
  /// Date when the discount starts to be applicable.
  startsAt              DateTime                @map("starts_at")
  /// Date when the discount stops to be applicable.
  endsAt                DateTime?               @map("ends_at")
  /// Whether the discount is enabled or not. Disabled discounts can't be applied to orders.
  enabled               Boolean                 @default(true)
  /// Define the requirements that the order must meet to be eligible for the discount.
  orderRequirementType  OrderRequirementType?   @map("order_requirement_type")
  /// The value that the order must meet to be eligible for the discount. (minimum amount or minimum items)
  orderRequirementValue Int?                    @map("order_requirement_value")
  /// List of available combinations for the discount.
  availableCombinations DiscountType[]          @map("available_combinations")
  /// Extra metadata needed for the discount.
  metadata              Json?

  orders DiscountOrder[]

  shop   Shop   @relation(fields: [shopId], references: [id])
  shopId String @default(dbgenerated("(current_setting('app.current_shop_id'::text))::uuid")) @map("shop_id") @db.Uuid

  @@map("discount")
}

model DiscountOrder {
  discount   Discount @relation(fields: [discountId], references: [id])
  discountId String   @map("discount_id") @db.Uuid

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @map("order_id") @db.Uuid

  @@id([discountId, orderId])
  @@map("discount_order")
}
