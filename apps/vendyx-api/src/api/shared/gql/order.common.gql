enum OrderState {
  """
  The order is being modified by the customer (CRUD line actions, adding contact info and shipment info)
  """
  MODIFYING
  """
  The order is ready to be paid
  """
  PAYMENT_ADDED
  """
  The payment has been authorized by the payment provider
  """
  PAYMENT_AUTHORIZED
  """
  The order has been shipped (carrier and tracking code added)
  """
  SHIPPED
  """
  The order has been delivered and is completes
  """
  DELIVERED
  """
  The order has been canceled by the admin
  """
  CANCELED
}

type Order implements Node {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  code: String!
  state: OrderState!

  """
  The price that will be sent to the payment provider. subtotal plus shipping price
  """
  total: Int!

  """
  Order lines total less discounts
  """
  subtotal: Int!

  """
  The date and time when a payment has been added to the order
  """
  placedAt: Date
  totalQuantity: Int!
  """
  Array of all order-level discount handles applied to the order
  Populated every time order is modified.
  Use this field to show data of current discounts applied to the order
  """
  discounts: [ActiveDiscount!]!

  lines(input: ListInput): OrderLineList!
  customer: Customer
  shippingAddress: AddressJson
  payment: Payment
  shipment: Shipment
}

type AddressJson {
  country: String!
  countryId: String!
  fullName: String!
  streetLine1: String!
  streetLine2: String
  city: String!
  """
  State or region
  """
  province: String!
  postalCode: String!
  phoneNumber: String!
  references: String
  isDefault: Boolean!
}

type ActiveDiscount {
  id: ID!
  handle: String!
  applicationMode: DiscountApplicationMode!
  discountedAmount: Int!
}

enum DiscountApplicationMode {
  CODE
  AUTOMATIC
}

type OrderList implements List {
  items: [Order!]!
  count: Int!
  pageInfo: PageInfo!
}

type Query {
  order(id: ID, code: String): Order
}
